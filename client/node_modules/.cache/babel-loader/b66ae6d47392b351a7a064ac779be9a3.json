{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\google-book-search\\\\client\\\\src\\\\pages\\\\Search.js\";\nimport React, { useState } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nfunction Search() {\n  const [book, setBook] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  function handleSearch(event) {\n    console.log(book);\n    API.searchBook(book).then(res => {\n      console.log(res);\n      setResults(res.data.items);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: book,\n    placeholder: \"Search Title or Author\",\n    onChange: event => setBook(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"Search\")), results.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, results.map(book => /*#__PURE__*/React.createElement(ListItem, {\n    key: book.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, book.volumeInfo.title, \" by \", book.volumeInfo.authors, book.volumeInfo.description), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => console.log(\"button\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"button\")))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"No Results to Display\")))));\n}\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/Owner/Desktop/google-book-search/client/src/pages/Search.js"],"names":["React","useState","API","Jumbotron","Col","Row","Container","List","ListItem","Search","book","setBook","results","setResults","handleSearch","event","console","log","searchBook","then","res","data","items","catch","err","target","value","length","map","id","volumeInfo","title","authors","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASa,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAR,IAAAA,GAAG,CAACgB,UAAJ,CAAeR,IAAf,EACGS,IADH,CACSC,GAAD,IAAS;AACbJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAP,MAAAA,UAAU,CAACO,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAV;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD,KAPH;AAQD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAEd,IADT;AAEE,IAAA,WAAW,EAAC,wBAFd;AAGE,IAAA,QAAQ,EAAGK,KAAD,IAAWJ,OAAO,CAACI,KAAK,CAACU,MAAN,CAAaC,KAAd,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AAAQ,IAAA,OAAO,EAAEZ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CADF,EAUGF,OAAO,CAACe,MAAR,gBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,OAAO,CAACgB,GAAR,CAAalB,IAAD,iBACX,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACmB,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,IAAI,CAACoB,UAAL,CAAgBC,KADnB,UAC8BrB,IAAI,CAACoB,UAAL,CAAgBE,OAD9C,EAEGtB,IAAI,CAACoB,UAAL,CAAgBG,WAFnB,CADF,eAKE;AAAQ,IAAA,OAAO,EAAE,MAAMjB,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADD,CADH,CADD,gBAeC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAzBJ,CADF,CADF,CADF,CADF;AAoCD;;AAED,eAAeR,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nfunction Search() {\n  const [book, setBook] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  function handleSearch(event) {\n    console.log(book);\n    API.searchBook(book)\n      .then((res) => {\n        console.log(res);\n        setResults(res.data.items);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <div>\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <input\n                value={book}\n                placeholder=\"Search Title or Author\"\n                onChange={(event) => setBook(event.target.value)}\n              />\n              <button onClick={handleSearch}>Search</button>\n              {/* <h1>{book}</h1> */}\n            </Jumbotron>\n            {results.length ? (\n              <List>\n                {results.map((book) => (\n                  <ListItem key={book.id}>\n                    <strong>\n                      {book.volumeInfo.title} by {book.volumeInfo.authors}\n                      {book.volumeInfo.description}\n                    </strong>\n                    <button onClick={() => console.log(\"button\")}>\n                      button\n                    </button>\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}